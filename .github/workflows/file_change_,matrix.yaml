name: file change detect matrix
on: [pull_request]
jobs:
  changes:
    runs-on: ubuntu-latest
    timeout-minutes: 3
    outputs:
      changes: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: paths-filter
        with:
          filters: |
            .github|.github:
              - .github/**
            workflows|.github/workflows:
              - .github/workflows/**
            actions|.github/actions:
              - .github/actions/**
            scripts|.github/scripts:
              - .github/scripts/**
            dotnet|src/dotnet:
              - src/dotnet/**
            json|src/json:
              - src/json/**
            k8s|src/k8s:
              - src/k8s/**
            mermaid|src/mermaid:
              - src/mermaid/**
            shellscript|src/shellscript:
              - src/shellscript/**
            txt|src/txt:
              - src/txt/**
            README|README.md:
              - README.md
      - name: Convert to json
        run: |
          echo "${{ steps.paths-filter.outputs.changes }}" | jq -c -R 'split(",") | map(split("|")) | map({"target": .[0], "path": .[1]})' > changes.json
      - name: output filter
        id: filter
        run: echo changes="$(cat ./changes.json)" >> "$GITHUB_OUTPUT"
      - name: output
        run: echo "${{ steps.filter.outputs.changes }}"

# want to create json from following string by bash.
# "workflows|.github/workflows,scripts|.github/scripts"

# // [
# //   {
# //     "target": "workflows",
# //     "path", ".github/workflows"
# //   },
# //   {
# //     "target": "scripts",
# //     "path", ".github/scripts"
# //   }
# // ]

# q: how to create json string from following string in bash script? "workflows|.github/workflows,scripts|.github/scripts"
# a: echo "workflows|.github/workflows,scripts|.github/scripts" | jq -R 'split(",") | map(split("|")) | map({"target": .[0], "path": .[1]})'

  # after:
  #   needs: changes
  #   strategy:
  #     max-parallel: 1 # let's run sequencial
  #     matrix:
  #       change: ${{ fromJSON(needs.changes.outputs.changes) }}
  #   env:
  #     CURRENT_WORKSPACE: ${{ matrix.workspace }}
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 60
  #   defaults:
  #     run:
  #       working-directory: "terraform/${{ matrix.path }}"
  #   steps:
  #     - uses: actions/checkout@v3
