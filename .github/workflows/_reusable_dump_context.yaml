name: _reusable dump context
on:
  workflow_call:
    inputs:
      output-path:
        description: Path to output context
        required: true
        type: string

jobs:
  dump-context:
    name: ${{ github.event_name }} ${{ github.event.action }} # `dump-context` in github.job
    strategy:
      fail-fast: false
      matrix:
        runs-on: [ubuntu-latest]
    runs-on: ${{ matrix.runs-on }}
    timeout-minutes: 5
    steps:
      # PR should checkout HEAD ref instead of merge commit.                        -> github.head.ref
      # PR close delete branch, so it should checkout BASE ref instead of HEAD ref. -> github.base_ref
      # Tag ref is tag version, let's checkout default branch instead of ref.       -> github.event.repository.default_branch
      # Other event use ref, which is default branch.                               -> github.ref_name
      - uses: actions/checkout@v4
        with:
          ref: ${{ (startsWith(github.event_name, 'pull_request') && github.event.action != 'closed') && github.head_ref || (startsWith(github.event_name, 'pull_request') && github.event.action == 'closed') && github.base_ref || github.ref_type == 'tag' && github.event.repository.default_branch || github.ref_name }}
      - name: file names
        id: file
        run: echo "name=${{ github.event_name }}${{ github.event.action != '' && format('_{0}', github.event.action) || ''}}${{ github.event_name == 'push' && format('_{0}', github.ref_type) || ''}}" | tee -a "$GITHUB_OUTPUT"
      - name: Dump environment
        shell: bash
        run: |
          mkdir -p "${{ env.OUTPUT_PATH }}"
          env | tee "${{ env.OUTPUT_PATH }}/${{ steps.file.outputs.name }}.sh"
        env:
          CONTEXT: ${{ toJson(env) }}
          OUTPUT_PATH: ${{ inputs.output-path }}/env
      - name: Dump GitHub context
        shell: bash
        run: |
          mkdir -p "${{ env.OUTPUT_PATH }}"
          echo "$CONTEXT" | jq '.token="<reducted>"' | tee "${{ env.OUTPUT_PATH }}/${{ steps.file.outputs.name }}.json"
        env:
          CONTEXT: ${{ toJson(github) }}
          OUTPUT_PATH: ${{ inputs.output-path }}/github
      - name: Dump job context
        shell: bash
        run: |
          mkdir -p "${{ env.OUTPUT_PATH }}"
          echo "$CONTEXT" | tee "${{ env.OUTPUT_PATH }}/${{ steps.file.outputs.name }}.json"
        env:
          CONTEXT: ${{ toJson(job) }}
          OUTPUT_PATH: ${{ inputs.output-path }}/job
      - name: Dump steps context
        shell: bash
        run: |
          mkdir -p "${{ env.OUTPUT_PATH }}"
          echo "$CONTEXT" | tee "${{ env.OUTPUT_PATH }}/${{ steps.file.outputs.name }}.json"
        env:
          CONTEXT: ${{ toJson(steps) }}
          OUTPUT_PATH: ${{ inputs.output-path }}/step
      - name: Dump runner context
        shell: bash
        run: |
          mkdir -p "${{ env.OUTPUT_PATH }}"
          echo "$CONTEXT" | tee "${{ env.OUTPUT_PATH }}/${{ steps.file.outputs.name }}.json"
        env:
          CONTEXT: ${{ toJson(runner) }}
          OUTPUT_PATH: ${{ inputs.output-path }}/runner
      - name: Dump strategy context
        shell: bash
        run: |
          mkdir -p "${{ env.OUTPUT_PATH }}"
          echo "$CONTEXT" | tee "${{ env.OUTPUT_PATH }}/${{ steps.file.outputs.name }}.json"
        env:
          CONTEXT: ${{ toJson(strategy) }}
          OUTPUT_PATH: ${{ inputs.output-path }}/strategy
      - name: Dump matrix context
        shell: bash
        run: |
          mkdir -p "${{ env.OUTPUT_PATH }}"
          echo "$CONTEXT" | tee "${{ env.OUTPUT_PATH }}/${{ steps.file.outputs.name }}.json"
        env:
          CONTEXT: ${{ toJson(matrix) }}
          OUTPUT_PATH: ${{ inputs.output-path }}/matrix
      - name: Update current git to latest & Push changes
        uses: ./.github/actions/git-push
        with:
          commit-message: "[auto commit] update context (workflow=${{ github.workflow }}, event=${{ github.event_name }}, action=${{ github.event.action }})"
          ref: ${{ (startsWith(github.event_name, 'pull_request') && github.event.action != 'closed') && github.head_ref || (startsWith(github.event_name, 'pull_request') && github.event.action == 'closed') && github.base_ref || github.ref_type == 'tag' && github.event.repository.default_branch || github.ref_name }}
